(()=>{"use strict";var e={537:(e,a,s)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.loadAdditionalAssets=a.loadInitialAssets=void 0;const t=s(496);async function o(e,a,s,o){const r=await t.workspace.fs.readFile(t.Uri.joinPath(a,"template",s)),i=o||s;await t.workspace.fs.writeFile(t.Uri.joinPath(e,i),r)}async function r(e,a,s,o){const r=await fetch(t.Uri.joinPath(t.Uri.parse(a),s).toString()),i=await r.arrayBuffer(),n=o||s;await t.workspace.fs.writeFile(t.Uri.joinPath(e,n),new Uint8Array(i))}a.loadInitialAssets=async function(e,a){const s=[];s.push(o(e,a,"main.html")),s.push(o(e,a,"README.md")),t.workspace.fs.createDirectory(t.Uri.joinPath(e,".vscode")),s.push(o(e,a,".vscode/tasks.json")),t.workspace.fs.createDirectory(t.Uri.joinPath(e,"src")),s.push(o(e,a,"src/Main.cpp")),t.workspace.fs.createDirectory(t.Uri.joinPath(e,"include")),await Promise.all(s)},a.loadAdditionalAssets=async function(e){const a=[],s=t.workspace.getConfiguration("siv3d-playground").get("siv3d-assets-download-url");a.push(r(e,s,"lib/Siv3D.wasm","Siv3D.wasm")),a.push(r(e,s,"lib/Siv3D.js","Siv3D.js")),a.push(r(e,s,"lib/Siv3D.data","Siv3D.data")),await Promise.all(a),t.workspace.fs.createDirectory(t.Uri.joinPath(e,"example")),a.push(r(e,s,"example/windmill.png")),a.push(r(e,s,"example/example/particle.png")),t.workspace.fs.createDirectory(t.Uri.joinPath(e,"example/geojson")),a.push(r(e,s,"example/geojson/countries.geojson")),t.workspace.fs.createDirectory(t.Uri.joinPath(e,"example/texture")),a.push(r(e,s,"example/texture/uv.png")),a.push(r(e,s,"example/texture/grass.jpg")),a.push(r(e,s,"example/texture/rock.jpg")),a.push(r(e,s,"example/texture/ground.jpg")),a.push(r(e,s,"example/texture/earth.jpg")),t.workspace.fs.createDirectory(t.Uri.joinPath(e,"example/shader")),t.workspace.fs.createDirectory(t.Uri.joinPath(e,"example/shader/essl")),a.push(r(e,s,"example/shader/essl/terrain_forward.vert")),a.push(r(e,s,"example/shader/essl/terrain_forward.frag")),a.push(r(e,s,"example/shader/essl/terrain_normal.frag")),t.workspace.fs.createDirectory(t.Uri.joinPath(e,"example/obj")),a.push(r(e,s,"example/obj/blacksmith.obj")),a.push(r(e,s,"example/obj/mill.obj")),a.push(r(e,s,"example/obj/tree.obj")),a.push(r(e,s,"example/obj/pine.obj")),await Promise.all(a)}},496:e=>{e.exports=require("vscode")}},a={};function s(t){var o=a[t];if(void 0!==o)return o.exports;var r=a[t]={exports:{}};return e[t](r,r.exports,s),r.exports}var t={};(()=>{var e=t;Object.defineProperty(e,"__esModule",{value:!0}),e.activate=void 0;const a=s(496),o=s(537);async function r(e,s){const t=s.path.split("/").slice(1);try{await a.workspace.fs.stat(s)}catch(e){if(!(e instanceof a.FileSystemError))throw e;for(let e=1;e<=t.length;e++){const o=s.with({path:"/"+t.slice(0,e).join("/")});await a.workspace.fs.createDirectory(o)}}if(t.length>0&&"gist"===t[0]){const e=a.Uri.parse(`gist://${t.slice(1).join("/")}/`),o=a.extensions.getExtension("vsls-contrib.gistfs");o.isActive||await o.activate(),await a.workspace.fs.copy(e,s,{overwrite:!0})}else await(0,o.loadInitialAssets)(s,e.extensionUri),a.commands.executeCommand("vscode.open",a.Uri.joinPath(s,"src/Main.cpp"),{preview:!1});await(0,o.loadAdditionalAssets)(s)}e.activate=async function(e){if("object"==typeof navigator){let s;e.subscriptions.push(a.commands.registerCommand("siv3d-playground.compile.run",(async()=>{const e=new Promise(((e,a)=>{s=e}));if(a.commands.executeCommand("workbench.action.tasks.runTask","emcc build"),0===await e){const e=a.workspace.workspaceFolders&&a.workspace.workspaceFolders.length>0?a.workspace.workspaceFolders[0].uri:void 0;a.commands.executeCommand("emcc.preview.show",a.Uri.joinPath(e,"main.html"),"Siv3D Preview")}s=null}))),a.tasks.onDidEndTaskProcess((e=>{"emcc build"==e.execution.task.name&&s&&s(e.exitCode)}));const t=a.extensions.getExtension("kamenokosoft.wasm-playground");t.isActive||await t.activate();const o=a.workspace.workspaceFolders&&a.workspace.workspaceFolders.length>0?a.workspace.workspaceFolders[0]:void 0;o&&r(e,o.uri),a.workspace.onDidChangeWorkspaceFolders((a=>{for(const s of a.added)r(e,s.uri)}))}}})(),module.exports=t})();
//# sourceMappingURL=extension.js.map